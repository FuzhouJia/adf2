{
	"name": "itgorders",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ITGCustomer",
						"type": "DatasetReference"
					},
					"name": "ITGCustomer"
				},
				{
					"dataset": {
						"referenceName": "ITGCities",
						"type": "DatasetReference"
					},
					"name": "ITGCities"
				},
				{
					"dataset": {
						"referenceName": "ITGStockitems",
						"type": "DatasetReference"
					},
					"name": "ITGStockItems"
				},
				{
					"dataset": {
						"referenceName": "ods_orders",
						"type": "DatasetReference"
					},
					"name": "ODSOrders"
				},
				{
					"dataset": {
						"referenceName": "ods_OrderLines",
						"type": "DatasetReference"
					},
					"name": "ODSOrderlines"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ITGOrders",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "selectcustomers"
				},
				{
					"name": "SelectCities"
				},
				{
					"name": "SelectStockitems"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "Select3"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Select5"
				},
				{
					"name": "Join3"
				},
				{
					"name": "Select6"
				}
			],
			"script": "source(output(\n\t\tCityKey as integer,\n\t\tCustomerID as integer,\n\t\tCustomerName as string,\n\t\tBillToCustomer as string,\n\t\tPrimaryContactPerson as string,\n\t\tPostalCityID as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tCurrentFlag as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ITGCustomer\nsource(output(\n\t\tCityKey as integer,\n\t\tCityID as integer,\n\t\tCityName as string,\n\t\tLocation as binary,\n\t\tLatestRecordedPopulation as long,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tCurrentFlag as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ITGCities\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ITGStockItems\nsource(output(\n\t\tOrderID as integer,\n\t\tCustomerID as integer,\n\t\tSalespersonPersonID as integer,\n\t\tPickedByPersonID as integer,\n\t\tContactPersonID as integer,\n\t\tBackorderOrderID as integer,\n\t\tOrderDate as date,\n\t\tExpectedDeliveryDate as date,\n\t\tCustomerPurchaseOrderNumber as string,\n\t\tIsUndersupplyBackordered as boolean,\n\t\tComments as string,\n\t\tDeliveryInstructions as string,\n\t\tInternalComments as string,\n\t\tPickingCompletedWhen as timestamp,\n\t\tLastEditedBy as integer,\n\t\tLastEditedWhen as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSOrders\nsource(output(\n\t\tOrderLineID as integer,\n\t\tOrderID as integer,\n\t\tStockItemID as integer,\n\t\tDescription as string,\n\t\tPackageTypeID as integer,\n\t\tQuantity as integer,\n\t\tUnitPrice as decimal(18,2),\n\t\tTaxRate as decimal(18,3),\n\t\tPickedQuantity as integer,\n\t\tPickingCompletedWhen as timestamp,\n\t\tLastEditedBy as integer,\n\t\tLastEditedWhen as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ODSOrderlines\nITGCustomer select(mapColumn(\n\t\tCityKey,\n\t\tCustomerID,\n\t\tCustomerName,\n\t\tBillToCustomer,\n\t\tPrimaryContactPerson,\n\t\tPostalCityID,\n\t\tValidFrom,\n\t\tValidTo,\n\t\tCurrentFlag\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectcustomers\nITGCities select(mapColumn(\n\t\tCityKey,\n\t\tCityID,\n\t\tCityName,\n\t\tLocation,\n\t\tLatestRecordedPopulation,\n\t\tLastEditedBy,\n\t\tValidFrom,\n\t\tValidTo,\n\t\tCurrentFlag\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCities\nITGStockItems select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectStockitems\nODSOrderlines select(mapColumn(\n\t\tOrderLineID,\n\t\tOrderID,\n\t\tStockItemID,\n\t\tDescription,\n\t\tPackageTypeID,\n\t\tQuantity,\n\t\tUnitPrice,\n\t\tTaxRate,\n\t\tPickedQuantity,\n\t\tPickingCompletedWhen,\n\t\tLastEditedBy,\n\t\tLastEditedWhen\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nODSOrders select(mapColumn(\n\t\tOrderID,\n\t\tCustomerID,\n\t\tSalespersonPersonID,\n\t\tPickedByPersonID,\n\t\tContactPersonID,\n\t\tBackorderOrderID,\n\t\tOrderDate,\n\t\tExpectedDeliveryDate,\n\t\tCustomerPurchaseOrderNumber,\n\t\tIsUndersupplyBackordered,\n\t\tComments,\n\t\tDeliveryInstructions,\n\t\tInternalComments,\n\t\tPickingCompletedWhen,\n\t\tLastEditedBy,\n\t\tLastEditedWhen\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, Select2 join(Select1@OrderID == Select2@OrderID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive(TotalExcludingTax = Quantity*UnitPrice,\n\t\tTaxAmount = Quantity*TaxRate,\n\t\tTotalIncludingTax = Quantity*(UnitPrice+TaxRate)) ~> DerivedColumn2\nDerivedColumn2 select(mapColumn(\n\t\tOrderID = Select1@OrderID,\n\t\tCustomerID,\n\t\tSalespersonPersonID,\n\t\tPickedByPersonID,\n\t\tContactPersonID,\n\t\tBackorderOrderID,\n\t\tOrderDate,\n\t\tExpectedDeliveryDate,\n\t\tCustomerPurchaseOrderNumber,\n\t\tIsUndersupplyBackordered,\n\t\tComments,\n\t\tDeliveryInstructions,\n\t\tInternalComments,\n\t\tPickingCompletedWhen = Select1@PickingCompletedWhen,\n\t\tLastEditedBy = Select1@LastEditedBy,\n\t\tLastEditedWhen = Select1@LastEditedWhen,\n\t\tOrderLineID,\n\t\tOrderID = Select2@OrderID,\n\t\tStockItemID,\n\t\tDescription,\n\t\tPackageTypeID,\n\t\tQuantity,\n\t\tUnitPrice,\n\t\tTaxRate,\n\t\tPickedQuantity,\n\t\tPickingCompletedWhen = Select2@PickingCompletedWhen,\n\t\tLastEditedBy = Select2@LastEditedBy,\n\t\tLastEditedWhen = Select2@LastEditedWhen,\n\t\tTotalExcludingTax,\n\t\tTaxAmount,\n\t\tTotalIncludingTax\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3, selectcustomers join(Select3@CustomerID == selectcustomers@CustomerID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tOrderID,\n\t\tCustomerID = Select3@CustomerID,\n\t\tSalespersonPersonID,\n\t\tPickedByPersonID,\n\t\tContactPersonID,\n\t\tBackorderOrderID,\n\t\tOrderDate,\n\t\tExpectedDeliveryDate,\n\t\tCustomerPurchaseOrderNumber,\n\t\tIsUndersupplyBackordered,\n\t\tComments,\n\t\tDeliveryInstructions,\n\t\tInternalComments,\n\t\tPickingCompletedWhen,\n\t\tLastEditedBy,\n\t\tLastEditedWhen,\n\t\tOrderLineID,\n\t\tStockItemID,\n\t\tDescription,\n\t\tPackageTypeID,\n\t\tQuantity,\n\t\tUnitPrice,\n\t\tTaxRate,\n\t\tPickedQuantity,\n\t\tTotalExcludingTax,\n\t\tTaxAmount,\n\t\tTotalIncludingTax,\n\t\tCityKey,\n\t\tCustomerID = selectcustomers@CustomerID,\n\t\tCustomerName,\n\t\tBillToCustomer,\n\t\tPrimaryContactPerson,\n\t\tPostalCityID,\n\t\tValidFrom,\n\t\tValidTo,\n\t\tCurrentFlag\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect5, SelectCities join(PostalCityID == CityID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join3\nJoin3 select(mapColumn(\n\t\tOrderID,\n\t\tCustomerID,\n\t\tSalespersonPersonID,\n\t\tPickedByPersonID,\n\t\tContactPersonID,\n\t\tBackorderOrderID,\n\t\tOrderDate,\n\t\tExpectedDeliveryDate,\n\t\tCustomerPurchaseOrderNumber,\n\t\tIsUndersupplyBackordered,\n\t\tComments,\n\t\tDeliveryInstructions,\n\t\tInternalComments,\n\t\tPickingCompletedWhen,\n\t\tLastEditedBy = Select5@LastEditedBy,\n\t\tLastEditedWhen,\n\t\tOrderLineID,\n\t\tStockItemID,\n\t\tDescription,\n\t\tPackageTypeID,\n\t\tQuantity,\n\t\tUnitPrice,\n\t\tTaxRate,\n\t\tPickedQuantity,\n\t\tTotalExcludingTax,\n\t\tTaxAmount,\n\t\tTotalIncludingTax,\n\t\tCityKey = Select5@CityKey,\n\t\tCustomerName,\n\t\tBillToCustomer,\n\t\tPrimaryContactPerson,\n\t\tPostalCityID,\n\t\tValidFrom = Select5@ValidFrom,\n\t\tValidTo = Select5@ValidTo,\n\t\tCurrentFlag = Select5@CurrentFlag,\n\t\tCityKey = SelectCities@CityKey,\n\t\tCityID,\n\t\tCityName,\n\t\tLocation,\n\t\tLatestRecordedPopulation,\n\t\tLastEditedBy = SelectCities@LastEditedBy,\n\t\tValidFrom = SelectCities@ValidFrom,\n\t\tValidTo = SelectCities@ValidTo,\n\t\tCurrentFlag = SelectCities@CurrentFlag\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nSelect6 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCityKey as integer,\n\t\tOrderID as integer,\n\t\tCityID as integer,\n\t\tCustomerID as integer,\n\t\tStockItemID as integer,\n\t\tOrderDate as date,\n\t\tPickingDate as timestamp,\n\t\tBackorderOrderID as integer,\n\t\tDescription as string,\n\t\tQuantity as integer,\n\t\tUnitPrice as decimal(18,2),\n\t\tTaxRate as decimal(18,3),\n\t\tTotalExcludingTax as decimal(18,3),\n\t\tTaxAmount as decimal(18,3),\n\t\tTotalIncludingTax as decimal(18,3)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}